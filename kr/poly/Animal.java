package kr.poly;

// 추상 클래스(불완전한 객체): 추상 메서드를 선언한 객체 -> Animal ani = new Animal(); (X: 객체 생성 불가능)
// 추상 클래스는 스스로 객체를 생성하지 못하지만, 추상 메서드를 선언하고 추상 메서드를 하위 클래스에서 반드시 재정의하게 함으로써 다형성을 일부 보장한다.
public abstract class Animal {
    public abstract void eat();     // 추상 메서드(불완전한 메서드) -> 다형성 보장

    // 추상 메서드 뿐만 아니라 구현 메서드도 선언할 수 있다.
    // 구현 메서드는 하위 클래스에서 반드시 재정의할 필요는 없고 선택적으로 재정의할 수 있다.
    // 추상 클래스의 구현 메서드는 일반적으로 하위 클래스들에서도 공통적으로 갖게 되는 기능을 정의한다.
    // 따라서 추상 클래스와 추상 클래스의 하위 클래스들은 서로 기능이 비슷한 클래스들을 설계하기 위해 사용한다.
    // 추상 클래스의 하위 클래스들은 서로 기능이 비슷한 클래스들이기 때문에 구현 메서드가 상속되더라도 이상이 없다.
    public void move() {
        System.out.println("무리지어 이동한다.");
    }
}
